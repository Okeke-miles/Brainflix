{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\frank-okeke-brainflix\\\\frank-okeke-brainflix\\\\sprint-two\\\\src\\\\components\\\\VideoList\\\\VideoList.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\nimport \"../../App.scss\";\nimport \"../VideoList/VideoList.scss\";\nimport { API_KEY, API_URL } from \"../../utils/api\";\nimport axios from \"axios\";\nimport MainVideoDisplay from \"../MainVideoDisplay/MainVideoDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass VideoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoList: [],\n      videoId: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${API_URL}videos?api_key=${API_KEY}`).then(res => res.data).then(data => {\n      //  let videoId = this.state.videoId;\n      // if (this.state.videoList===this.state.videoId) {return null}\n      let videoId = data.length > 0 ? data[0].id : videoId;\n\n      if (this.state.videoId === videoId) {\n        this.setState({\n          videoId: videoId\n        });\n      }\n\n      this.setState({\n        videoList: data,\n        videoId: data[0].id\n      }); // let {videoId} = this.props.match.params;\n      // if(videoId !== this.state.videoList) {\n      // this.setState({ videoId: videoId })}\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    let {\n      videoId\n    } = this.props.match.params;\n    console.log(this.props.match.params);\n    console.log(this.filteredArray);\n\n    if (videoId !== this.state.videoId) {\n      this.setState({\n        videoId: videoId\n      });\n    } //  const {selectedId} = this.props.match.params;\n    //  console.log(this.props.match.params)\n\n\n    if (videoId !== prevProps.match.params.videoId) {\n      this.setState({\n        videoId: videoId\n      });\n      console.log(this.state.videoId);\n    }\n  }\n\n  render() {\n    // const { videos } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-component\",\n        children: [/*#__PURE__*/_jsxDEV(MainVideoDisplay, {\n          videoId: this.state.videoId,\n          className: \"mainvideo-component__style\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"videolist-container__style\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videolist__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"nextvideo-title__style\",\n              children: \"NEXT VIDEO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videolist__style\",\n              children: this.state.videoList.map(video => {\n                return video.id !== this.state.videoId ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nextvideo__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"nextvideo__flex\",\n                    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                      to: `/${video.id}`,\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"nextvideo__style\",\n                        src: video.image,\n                        width: \"140\",\n                        height: \"120\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"nextvideo-list-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"nextvideo-desc__style\",\n                        children: video.title\n                      }, video.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"nextvideo-channel__style\",\n                        children: video.channel\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this)\n                }, video.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this) : \"\";\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default VideoList;","map":{"version":3,"sources":["C:/Users/frank/Desktop/frank-okeke-brainflix/frank-okeke-brainflix/sprint-two/src/components/VideoList/VideoList.jsx"],"names":["React","Component","NavLink","Link","withRouter","API_KEY","API_URL","axios","MainVideoDisplay","VideoList","state","videoList","videoId","componentDidMount","get","then","res","data","length","id","setState","catch","error","console","log","componentDidUpdate","prevProps","props","match","params","filteredArray","render","map","video","image","title","channel"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink, Link, withRouter} from \"react-router-dom\"\r\nimport \"../../App.scss\"\r\nimport \"../VideoList/VideoList.scss\"\r\nimport {API_KEY, API_URL} from \"../../utils/api\";\r\nimport axios from \"axios\"\r\nimport MainVideoDisplay from \"../MainVideoDisplay/MainVideoDisplay\"\r\n\r\nclass VideoList extends Component{\r\n  \r\n  state = {\r\n    videoList: [],\r\n    videoId: null,\r\n}\r\n\r\n  componentDidMount(){\r\n    \r\n    axios.get(`${API_URL}videos?api_key=${API_KEY}`).then(res => res.data)\r\n    .then(data => {\r\n      \r\n        //  let videoId = this.state.videoId;\r\n      // if (this.state.videoList===this.state.videoId) {return null}\r\n        let videoId = data.length > 0 ? data[0].id : videoId;\r\n        if(this.state.videoId === videoId){\r\n        this.setState({videoId: videoId})}\r\n          this.setState({\r\n          videoList: data,\r\n          videoId: data[0].id\r\n          });\r\n          // let {videoId} = this.props.match.params;\r\n          // if(videoId !== this.state.videoList) {\r\n          // this.setState({ videoId: videoId })}\r\n    }).catch(error=>{console.log(error)})\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n      let {videoId} = this.props.match.params;\r\n      console.log(this.props.match.params)\r\n      console.log(this.filteredArray)\r\n      \r\n      if(videoId !== this.state.videoId) {\r\n      this.setState({ videoId: videoId })}\r\n      \r\n    //  const {selectedId} = this.props.match.params;\r\n    //  console.log(this.props.match.params)\r\n\r\n      if(videoId !== prevProps.match.params.videoId) {\r\n          this.setState({ videoId: videoId })\r\n          console.log(this.state.videoId)\r\n      }\r\n    }\r\n    \r\n  render(){\r\n    // const { videos } = this.props;\r\n    \r\n      return (\r\n        \r\n        <>\r\n        <div className=\"flex-component\">\r\n        <MainVideoDisplay videoId={this.state.videoId} className=\"mainvideo-component__style\"/>\r\n          <section className=\"videolist-container__style\">\r\n            <div className=\"videolist__content\">\r\n              <h2 className=\"nextvideo-title__style\">NEXT VIDEO</h2>\r\n              <div className=\"videolist__style\">\r\n              {/* {(this.state.videoList.map(video => \r\n                video.id !== this.state.videoId ? */}\r\n                {/* {(this.filteredArray.map(video => { */}\r\n                {/* {(this.state.videoList.filter(video => video.id !== this.state.videoId)\r\n                .map(video => (console.log(video), \r\n                 <div key={video.id} className=\"nextvideo__container\">\r\n                      <div className=\"nextvideo__flex\">\r\n                        <NavLink to={`/video/${video.id}`}>\r\n                          <img className=\"nextvideo__style\" src={video.image} alt={video.name} width=\"140\" height=\"120\" />\r\n                        </NavLink>\r\n                          \r\n                        <div className=\"nextvideo-list-container\">\r\n                            <p className=\"nextvideo-desc__style\" key={video.id}>\r\n                              {video.title}\r\n                            </p>\r\n                            <p className=\"nextvideo-channel__style\">\r\n                              {video.channel}\r\n                            </p>\r\n                        </div>\r\n                      </div>\r\n                  </div> \r\n              ))\r\n                )} */}\r\n                  {this.state.videoList.map((video) => {return (\r\n                  (video.id!==this.state.videoId) ? \r\n                  <div key={video.id} className=\"nextvideo__container\">\r\n                      <div className=\"nextvideo__flex\">\r\n                        <NavLink to={`/${video.id}`}>\r\n                          <img className=\"nextvideo__style\" src={video.image} width=\"140\" height=\"120\" />\r\n                        </NavLink>\r\n                          \r\n                        <div className=\"nextvideo-list-container\">\r\n                            <p className=\"nextvideo-desc__style\" key={video.id}>\r\n                              {video.title}\r\n                            </p>\r\n                            <p className=\"nextvideo-channel__style\">\r\n                              {video.channel}\r\n                            </p>\r\n                        </div>\r\n                      </div>\r\n                  </div> : (\"\")   \r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          </div>\r\n          </>\r\n  )}\r\n          }\r\n\r\nexport default VideoList\r\n"]},"metadata":{},"sourceType":"module"}