{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\desktop\\\\frank-okeke-brainflix\\\\frank-okeke-brainflix\\\\sprint-one\\\\src\\\\Components\\\\MainVideo\\\\MainVideo.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainVideo(props) {\n  if (!props.mainVideo) {\n    return \"\";\n  }\n\n  let time = new Date(props.mainVideo.timestamp);\n  let day = time.getUTCDate();\n  let month = time.getUTCMonth() + 1;\n  let year = time.getUTCFullYear();\n  let newTime = `${day}/${month}/${year}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.mainVideo.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.mainVideo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.mainVideo.channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.mainVideo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.mainVideo.likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.mainVideo.views\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.videoDisplay,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchIcon\",\n          type: \"search\",\n          id: \"search\",\n          name: \"search\",\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button__style\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"upload__button\",\n            children: \"+ UPLOAD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"avatar\",\n            src: avatar,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), props.mainVideo.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment.name\n          }, comment.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MainVideo;\nexport default MainVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainVideo\");","map":{"version":3,"sources":["C:/Users/frank/desktop/frank-okeke-brainflix/frank-okeke-brainflix/sprint-one/src/Components/MainVideo/MainVideo.jsx"],"names":["React","MainVideo","props","mainVideo","time","Date","timestamp","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","newTime","image","title","channel","description","likes","views","videoDisplay","avatar","comments","map","comment","name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAEtB,MAAI,CAACA,KAAK,CAACC,SAAX,EAAqB;AACjB,WAAO,EAAP;AACH;;AACD,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAUH,KAAK,CAACC,SAAN,CAAgBG,SAA1B,CAAX;AAEA,MAAIC,GAAG,GAAGH,IAAI,CAACI,UAAL,EAAV;AACA,MAAIC,KAAK,GAAGL,IAAI,CAACM,WAAL,KAAqB,CAAjC;AACA,MAAIC,IAAI,GAAGP,IAAI,CAACQ,cAAL,EAAX;AACA,MAAIC,OAAO,GAAI,GAAEN,GAAI,IAAGE,KAAM,IAAGE,IAAK,EAAtC;AACA,sBAEI;AAAA,2BACA;AAAA,8BACA;AAAK,QAAA,GAAG,EAAET,KAAK,CAACC,SAAN,CAAgBW;AAA1B;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAA,kBAAKZ,KAAK,CAACC,SAAN,CAAgBY;AAArB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIb,KAAK,CAACC,SAAN,CAAgBa;AAApB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAId,KAAK,CAACC,SAAN,CAAgBc;AAApB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBAAIf,KAAK,CAACC,SAAN,CAAgBe;AAApB;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,kBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,kBAAIX,KAAK,CAACC,SAAN,CAAgBgB;AAApB;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE;AAAM,QAAA,QAAQ,EAAEjB,KAAK,CAACkB,YAAtB;AAAA,gCACF;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADE,eAEE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,IAAI,EAAC,QAAnC;AAA4C,UAAA,EAAE,EAAC,QAA/C;AAAwD,UAAA,IAAI,EAAE,QAA9D;AAAuE,UAAA,WAAW,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,EAAE,EAAC,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,oBAC4D;AAAK,YAAA,SAAS,EAAE,QAAhB;AAA0B,YAAA,GAAG,EAAEC,MAA/B;AAAuC,YAAA,GAAG,EAAG;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAD5D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,EAmBGnB,KAAK,CAACC,SAAN,CAAgBmB,QAAhB,CAAyBC,GAAzB,CAA8BC,OAAD,IAAa;AACzC,4BACA;AAAA,kCACE;AAAA,sBAEEA,OAAO,CAACC;AAFV,aACKD,OAAO,CAACE,EADb;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBACEF,OAAO,CAACA;AADV;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,wBADA;AASD,OAVA,CAnBH;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsCH;;KAjDQvB,S;AAmDT,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\n\r\nfunction MainVideo(props) {\r\n  \r\n    if (!props.mainVideo){\r\n        return \"\"\r\n    }\r\n    let time = new Date (props.mainVideo.timestamp)\r\n  \r\n    let day = time.getUTCDate();\r\n    let month = time.getUTCMonth() + 1;\r\n    let year = time.getUTCFullYear();\r\n    let newTime = `${day}/${month}/${year}`\r\n    return (\r\n                \r\n        <div>\r\n        <>\r\n        <img src={props.mainVideo.image} />\r\n          <h3>{props.mainVideo.title}</h3>\r\n          <p>{props.mainVideo.channel}</p>\r\n          <p>{props.mainVideo.description}</p>\r\n          <p>{props.mainVideo.likes}</p>\r\n          <p>{newTime}</p>\r\n          <p>{props.mainVideo.views}</p>\r\n          \r\n            {/* <p>{props.mainVideo.comments}</p> */}\r\n          {/* <video>{props.entry.video}</video> */}\r\n          <form onSubmit={props.videoDisplay}>\r\n        <label htmlFor=\"text\"></label>\r\n            <input className=\"searchIcon\" type=\"search\" id=\"search\" name= \"search\" placeholder=\"Search\"/>\r\n            <div className=\"button__style\">\r\n            <button type=\"submit\" id=\"upload__button\">+ UPLOAD</button> <img className= \"avatar\"  src={avatar} alt = \"avatar\" /></div>\r\n        </form>\r\n\r\n          \r\n          {props.mainVideo.comments.map((comment) => {\r\n            return (\r\n            <>\r\n              <li\r\n              key={comment.id}\r\n              >{comment.name}</li>\r\n              <li\r\n              >{comment.comment}</li>\r\n            </>\r\n            )\r\n          })}\r\n\r\n        </>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainVideo\r\n"]},"metadata":{},"sourceType":"module"}