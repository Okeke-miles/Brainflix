{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\frank-okeke-brainflix\\\\frank-okeke-brainflix\\\\sprint-two\\\\src\\\\components\\\\VideoContainer\\\\VideoContainer.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { API_URL, API_KEY } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VideoContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoId: null,\n      videos: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${API_URL}videos?api_key=${API_KEY}`).then(res => res.data).then(data => {\n      this.setState({\n        videos: data\n      });\n\n      if (data.length > 0 && this.state.videoId == null) {\n        this.setState({\n          videoID: data[0].id\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      videoId\n    } = this.props.match.params;\n\n    if (videoId !== prevProps.match.params.videoId) {\n      this.setState({\n        videoID: videoId\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MainVideoDisplay, {\n        videoId: this.state.videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n        videos: this.state.videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default VideoContainer; // VideoContainer\n// this.\n// state={videoId: null, videos: []}","map":{"version":3,"sources":["C:/Users/frank/Desktop/frank-okeke-brainflix/frank-okeke-brainflix/sprint-two/src/components/VideoContainer/VideoContainer.jsx"],"names":["React","Component","axios","API_URL","API_KEY","VideoContainer","state","videoId","videos","componentDidMount","get","then","res","data","setState","length","videoID","id","catch","error","console","log","componentDidUpdate","prevProps","props","match","params","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,iBAA/B;;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCK,KAFmC,GAE7B;AACFC,MAAAA,OAAO,EAAE,IADP;AAEFC,MAAAA,MAAM,EAAE;AAFN,KAF6B;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEP,OAAQ,kBAAiBC,OAAQ,EAA9C,EACCO,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IADjB,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAEK;AAAT,OAAd;;AACA,UAAIA,IAAI,CAACE,MAAL,GAAc,CAAd,IAAmB,KAAKT,KAAL,CAAWC,OAAX,IAAsB,IAA7C,EAAmD;AAC/C,aAAKO,QAAL,CAAc;AAAEE,UAAAA,OAAO,EAAEH,IAAI,CAAC,CAAD,CAAJ,CAAQI;AAAnB,SAAd;AACH;AACL,KAPA,EAOEC,KAPF,CAOQC,KAAK,IAAE;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,KAPnC;AAQJ;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,UAAM;AAAChB,MAAAA;AAAD,QAAY,KAAKiB,KAAL,CAAWC,KAAX,CAAiBC,MAAnC;;AAEA,QAAGnB,OAAO,KAAKgB,SAAS,CAACE,KAAV,CAAgBC,MAAhB,CAAuBnB,OAAtC,EAA+C;AAC3C,WAAKO,QAAL,CAAc;AAAEE,QAAAA,OAAO,EAAET;AAAX,OAAd;AACH;AACJ;;AAEAoB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAjCkC;;AAoCvC,eAAeH,cAAf,C,CAGA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from \"axios\"\r\nimport {API_URL, API_KEY} from \"../../utils/api\"\r\n\r\nclass VideoContainer extends Component {\r\n    \r\n    state={\r\n        videoId: null,\r\n        videos: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`${API_URL}videos?api_key=${API_KEY}`)\r\n        .then(res => res.data)\r\n        .then(data => {\r\n            this.setState({videos: data})\r\n            if (data.length > 0 && this.state.videoId == null ){ \r\n                this.setState({ videoID: data[0].id })\r\n            }\r\n       }).catch(error=>{console.log(error)})\r\n   }\r\n   \r\n   componentDidUpdate(prevProps){\r\n       const {videoId} = this.props.match.params;\r\n   \r\n       if(videoId !== prevProps.match.params.videoId) {\r\n           this.setState({ videoID: videoId })\r\n       }\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MainVideoDisplay videoId={this.state.videoId}/>\r\n                <VideoList videos={this.state.videos}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VideoContainer\r\n\r\n\r\n// VideoContainer\r\n// this.\r\n\r\n// state={videoId: null, videos: []}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}