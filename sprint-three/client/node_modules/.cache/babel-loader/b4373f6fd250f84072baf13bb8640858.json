{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\desktop\\\\frank-okeke-brainflix\\\\frank-okeke-brainflix\\\\sprint-one\\\\src\\\\App.js\";\nimport './App.scss';\nimport Header from \"../src/Components/Header/Header\";\nimport VideoDisplay from \"../src/Components/Header/VideoDisplay/VideoDisplay\";\nimport VideoList from \"../src/Components/Header/VideoList/VideoList\";\nimport Data from \"../src/data/videos.json\";\nimport DataDetails from \"../src/data/video-details.json\";\nimport React from 'react';\nimport Comment from '../src/Components/Header/Comments/Comment';\nimport SelectedEntry from \"../src/Components/SelectedEntry/SelectedEntry\";\nimport MainVideo from \"../src/Components/MainVideo/MainVideo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: Data,\n      videoDetail: DataDetails,\n      selectedEntry: null,\n      mainVideo: {\n        title: \"BMX Rampage: 2018 Highlights\",\n        channel: \"Red Cow\",\n        image: \"https://i.imgur.com/l2Xfgpl.jpg\",\n        description: \"On a gusty day in Southern Utah, a group of 25 daring mountain bikers blew the doors off what is possible on two wheels, unleashing some of the biggest moments the sport has ever seen. While mother nature only allowed for one full run before the conditions made it impossible to ride, that was all that was needed for event veteran Kyle Strait, who won the event for the second time -- eight years after his first Red Cow Rampage title\",\n        views: \"1,001,023\",\n        likes: \"110,985\"\n      }\n    };\n\n    this.setCurrentVideo = id => {\n      const individualEntry = this.state.videoDetail.find(video => video.id === id);\n      this.setState({\n        selectedEntry: individualEntry\n      });\n    };\n\n    this.setMainVideo = id => {\n      const mainEntry = this.state.mainVideo.find(video => video.id === id);\n      this.setState({\n        mainVideo: mainEntry\n      });\n    };\n\n    this.videoDisplay = event => {\n      event.preventDefault();\n      let image = this.state.videoDetail.image;\n      let title = this.state.videoDetail.title;\n      let channel = this.state.videoDetail.channel;\n      let id = this.state.videoDetail.id;\n      let description = this.state.videoDetail.description;\n      let likes = this.state.videoDetail.likes;\n      let timestamp = this.state.videoDetail.timestamp;\n      let views = this.state.videoDetail.views;\n      let video = this.state.videoDetail.video;\n      let newVideo = {\n        id: id,\n        title: title,\n        image: image,\n        channel: channel,\n        description: description,\n        likes: likes,\n        timestamp: timestamp,\n        views: views,\n        video: video\n      };\n      let newArray = this.state.videos.concat(newVideo);\n      this.setState({\n        videoDetail: newArray\n      });\n      event.target.reset();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        entry: this.videoDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SelectedEntry, {\n        entry: this.state.selectedEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MainVideo, {\n        mainVideo: this.state.mainVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {\n        entry: this.state.selectedEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(VideoDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n        videos: this.state.videos,\n        videoDetail: this.state.videoDetail,\n        setCurrentVideo: this.setCurrentVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frank/desktop/frank-okeke-brainflix/frank-okeke-brainflix/sprint-one/src/App.js"],"names":["Header","VideoDisplay","VideoList","Data","DataDetails","React","Comment","SelectedEntry","MainVideo","App","Component","state","videos","videoDetail","selectedEntry","mainVideo","title","channel","image","description","views","likes","setCurrentVideo","id","individualEntry","find","video","setState","setMainVideo","mainEntry","videoDisplay","event","preventDefault","timestamp","newVideo","newArray","concat","target","reset","render"],"mappings":"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","sourcesContent":["import './App.scss';\nimport Header from \"../src/Components/Header/Header\";\nimport VideoDisplay from \"../src/Components/Header/VideoDisplay/VideoDisplay\";\nimport VideoList from \"../src/Components/Header/VideoList/VideoList\";\nimport Data from \"../src/data/videos.json\";\nimport DataDetails from \"../src/data/video-details.json\";\nimport React from 'react';\nimport Comment from '../src/Components/Header/Comments/Comment'\nimport SelectedEntry from \"../src/Components/SelectedEntry/SelectedEntry\"\nimport MainVideo from \"../src/Components/MainVideo/MainVideo\"\n\nclass App extends React.Component{\n  state = {\n    videos: Data,\n    videoDetail: DataDetails,\n    selectedEntry: null,\n    mainVideo: {\n      title: \"BMX Rampage: 2018 Highlights\",\n    channel: \"Red Cow\",\n    image: \"https://i.imgur.com/l2Xfgpl.jpg\",\n    description: \"On a gusty day in Southern Utah, a group of 25 daring mountain bikers blew the doors off what is possible on two wheels, unleashing some of the biggest moments the sport has ever seen. While mother nature only allowed for one full run before the conditions made it impossible to ride, that was all that was needed for event veteran Kyle Strait, who won the event for the second time -- eight years after his first Red Cow Rampage title\",\n    views: \"1,001,023\",\n    likes: \"110,985\",\n    }\n}\n\nsetCurrentVideo = (id) => {\n  const individualEntry = this.state.videoDetail.find((video) => video.id === id);\n  this.setState({ selectedEntry: individualEntry });\n};\n\nsetMainVideo = (id) => {\n  const mainEntry = this.state.mainVideo.find((video) => video.id === id);\n  this.setState({ mainVideo: mainEntry});\n};\n\n\nvideoDisplay = (event) => {\n  \n  event.preventDefault();\n  let image = this.state.videoDetail.image;\n  let title = this.state.videoDetail.title;\n  let channel = this.state.videoDetail.channel;\n  let id = this.state.videoDetail.id;\n  let description = this.state.videoDetail.description;\n  let likes = this.state.videoDetail.likes;\n \n  let timestamp= this.state.videoDetail.timestamp;\n  let views = this.state.videoDetail.views;\n  let video = this.state.videoDetail.video;\n  let newVideo = { id: id, title: title, image: image, channel: channel, description: description, likes: likes, timestamp:timestamp, views: views, video: video};\n  let newArray = this.state.videos.concat(newVideo);\n  this.setState({ videoDetail: newArray });\n  event.target.reset();\n};\n\n  render(){\n    \n  return (\n    <div className=\"App\">\n      <Header entry={this.videoDisplay}/>\n\n      <SelectedEntry entry={this.state.selectedEntry}/>\n      <MainVideo \n      mainVideo = {this.state.mainVideo}/>\n      <Comment entry={this.state.selectedEntry}/>\n\n      <VideoDisplay />\n      <VideoList videos = {this.state.videos} \n      videoDetail={this.state.videoDetail}\n      setCurrentVideo={this.setCurrentVideo}\n      />\n     \n     \n    </div>\n  )}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}