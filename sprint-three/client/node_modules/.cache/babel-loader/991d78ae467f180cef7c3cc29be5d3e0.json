{"ast":null,"code":"export function getDate(input) {\n  // let time = new Date (input)\n  //     let day = time.getUTCDate();\n  //     let month = time.getUTCMonth() + 1;\n  //     let year = time.getUTCFullYear();\n  //     let newTime = `${day}/${month}/${year}`\n  // return newTime\n  // }\n  let seconds = Math.floor((new Date() - date) / 1000);\n  var interval = seconds / 31536000;\n\n  if (interval > 1) {\n    return Math.floor(interval) + \" years\";\n  }\n\n  interval = seconds / 2592000;\n\n  if (interval > 1) {\n    return Math.floor(interval) + \" months\";\n  }\n\n  interval = seconds / 86400;\n\n  if (interval > 1) {\n    return Math.floor(interval) + \" days\";\n  }\n\n  interval = seconds / 3600;\n\n  if (interval > 1) {\n    return Math.floor(interval) + \" hours\";\n  }\n\n  interval = seconds / 60;\n\n  if (interval > 1) {\n    return Math.floor(interval) + \" minutes\";\n  }\n\n  return Math.floor(seconds) + \" seconds\";\n} //   let aDay = 24*60*60*1000;\n//   console.log(timeSince(new Date(Date.now()-aDay)));\n//   console.log(timeSince(new Date(Date.now()-aDay*2)));\n\nexport default getDate;","map":{"version":3,"sources":["C:/Users/frank/desktop/frank-okeke-brainflix/frank-okeke-brainflix/sprint-one/src/Components/GetDate/GetDate.jsx"],"names":["getDate","input","seconds","Math","floor","Date","date","interval"],"mappings":"AAAA,OAAO,SAASA,OAAT,CAAkBC,KAAlB,EAAwB;AAE3B;AAEA;AACA;AACA;AACA;AACA;AACA;AAEI,MAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,KAAaC,IAAd,IAAsB,IAAjC,CAAd;AAEA,MAAIC,QAAQ,GAAGL,OAAO,GAAG,QAAzB;;AAEA,MAAIK,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAOJ,IAAI,CAACC,KAAL,CAAWG,QAAX,IAAuB,QAA9B;AACD;;AACDA,EAAAA,QAAQ,GAAGL,OAAO,GAAG,OAArB;;AACA,MAAIK,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAOJ,IAAI,CAACC,KAAL,CAAWG,QAAX,IAAuB,SAA9B;AACD;;AACDA,EAAAA,QAAQ,GAAGL,OAAO,GAAG,KAArB;;AACA,MAAIK,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAOJ,IAAI,CAACC,KAAL,CAAWG,QAAX,IAAuB,OAA9B;AACD;;AACDA,EAAAA,QAAQ,GAAGL,OAAO,GAAG,IAArB;;AACA,MAAIK,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAOJ,IAAI,CAACC,KAAL,CAAWG,QAAX,IAAuB,QAA9B;AACD;;AACDA,EAAAA,QAAQ,GAAGL,OAAO,GAAG,EAArB;;AACA,MAAIK,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAOJ,IAAI,CAACC,KAAL,CAAWG,QAAX,IAAuB,UAA9B;AACD;;AACD,SAAOJ,IAAI,CAACC,KAAL,CAAWF,OAAX,IAAsB,UAA7B;AACD,C,CACH;AACA;AACA;;AAEA,eAAeF,OAAf","sourcesContent":["export function getDate (input){\r\n\r\n    // let time = new Date (input)\r\n      \r\n    //     let day = time.getUTCDate();\r\n    //     let month = time.getUTCMonth() + 1;\r\n    //     let year = time.getUTCFullYear();\r\n    //     let newTime = `${day}/${month}/${year}`\r\n    // return newTime\r\n    // }\r\n\r\n        let seconds = Math.floor((new Date() - date) / 1000);\r\n      \r\n        var interval = seconds / 31536000;\r\n      \r\n        if (interval > 1) {\r\n          return Math.floor(interval) + \" years\";\r\n        }\r\n        interval = seconds / 2592000;\r\n        if (interval > 1) {\r\n          return Math.floor(interval) + \" months\";\r\n        }\r\n        interval = seconds / 86400;\r\n        if (interval > 1) {\r\n          return Math.floor(interval) + \" days\";\r\n        }\r\n        interval = seconds / 3600;\r\n        if (interval > 1) {\r\n          return Math.floor(interval) + \" hours\";\r\n        }\r\n        interval = seconds / 60;\r\n        if (interval > 1) {\r\n          return Math.floor(interval) + \" minutes\";\r\n        }\r\n        return Math.floor(seconds) + \" seconds\";\r\n      }\r\n    //   let aDay = 24*60*60*1000;\r\n    //   console.log(timeSince(new Date(Date.now()-aDay)));\r\n    //   console.log(timeSince(new Date(Date.now()-aDay*2)));\r\n    \r\n    export default getDate\r\n    \r\n    "]},"metadata":{},"sourceType":"module"}