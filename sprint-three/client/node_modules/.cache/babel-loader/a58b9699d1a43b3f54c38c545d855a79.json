{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\desktop\\\\frank-okeke-brainflix\\\\frank-okeke-brainflix\\\\sprint-one\\\\src\\\\App.js\";\nimport './App.scss';\nimport Header from \"../src/Components/Header/Header\";\nimport VideoDisplay from \"../src/Components/Header/VideoDisplay/VideoDisplay\";\nimport VideoList from \"../src/Components/Header/VideoList/VideoList\";\nimport Data from \"../src/data/videos.json\";\nimport DataDetails from \"../src/data/video-details.json\";\nimport React from 'react';\nimport Comment from '../src/Components/Header/Comments/Comment';\nimport SelectedEntry from \"../src/Components/SelectedEntry/SelectedEntry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: Data,\n      videoDetail: DataDetails,\n      selectedEntry: null\n    };\n\n    this.setCurrentVideo = id => {\n      const individualEntry = this.state.videos.find(video => video.id === id);\n      this.setState({\n        selectedEntry: individualEntry\n      });\n    };\n\n    this.videoDisplay = event => {\n      event.preventDefault();\n      let image = this.state.videos.image;\n      let title = this.state.videos.title;\n      let channel = this.state.videos.channel;\n      let id = this.state.videos.id;\n      let newVideo = {\n        id: id,\n        title: title,\n        image: image,\n        channel: channel\n      };\n      let newArray = this.state.videos.concat(newVideo);\n      this.setState({\n        videos: newArray\n      });\n      event.target.reset();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(VideoDisplay, {\n        entry: this.videoDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n        videos: this.state.videos,\n        setCurrentVideo: this.setCurrentVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SelectedEntry, {\n        entry: this.state.selectedEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frank/desktop/frank-okeke-brainflix/frank-okeke-brainflix/sprint-one/src/App.js"],"names":["Header","VideoDisplay","VideoList","Data","DataDetails","React","Comment","SelectedEntry","App","Component","state","videos","videoDetail","selectedEntry","setCurrentVideo","id","individualEntry","find","video","setState","videoDisplay","event","preventDefault","image","title","channel","newVideo","newArray","concat","target","reset","render"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,MAAP,MAAmB,iCAAnB;AACA,OAAOC,YAAP,MAAyB,oDAAzB;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,MAAM,EAAER,IADF;AAENS,MAAAA,WAAW,EAAER,WAFP;AAGNS,MAAAA,aAAa,EAAE;AAHT,KADuB;;AAAA,SAQjCC,eARiC,GAQdC,EAAD,IAAQ;AACxB,YAAMC,eAAe,GAAG,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,IAAlB,CAAwBC,KAAD,IAAWA,KAAK,CAACH,EAAN,KAAaA,EAA/C,CAAxB;AACA,WAAKI,QAAL,CAAc;AAAEN,QAAAA,aAAa,EAAEG;AAAjB,OAAd;AACD,KAXgC;;AAAA,SAajCI,YAbiC,GAajBC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,KAAK,GAAG,KAAKb,KAAL,CAAWC,MAAX,CAAkBY,KAA9B;AACA,UAAIC,KAAK,GAAG,KAAKd,KAAL,CAAWC,MAAX,CAAkBa,KAA9B;AACA,UAAIC,OAAO,GAAG,KAAKf,KAAL,CAAWC,MAAX,CAAkBc,OAAhC;AACA,UAAIV,EAAE,GAAG,KAAKL,KAAL,CAAWC,MAAX,CAAkBI,EAA3B;AACA,UAAIW,QAAQ,GAAG;AAAEX,QAAAA,EAAE,EAAEA,EAAN;AAAUS,QAAAA,KAAK,EAAEA,KAAjB;AAAwBD,QAAAA,KAAK,EAAEA,KAA/B;AAAsCE,QAAAA,OAAO,EAAEA;AAA/C,OAAf;AACA,UAAIE,QAAQ,GAAG,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,MAAlB,CAAyBF,QAAzB,CAAf;AACA,WAAKP,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEgB;AAAV,OAAd;AACAN,MAAAA,KAAK,CAACQ,MAAN,CAAaC,KAAb;AACD,KAvBgC;AAAA;;AAyB/BC,EAAAA,MAAM,GAAE;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE,KAAKX;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAI,KAAKV,KAAL,CAAWC,MAAhC;AAAwC,QAAA,eAAe,EAAE,KAAKG;AAA9D;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG;AAAjC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASE;;AAnC6B;;AAsCjC,eAAeL,GAAf","sourcesContent":["import './App.scss';\nimport Header from \"../src/Components/Header/Header\";\nimport VideoDisplay from \"../src/Components/Header/VideoDisplay/VideoDisplay\";\nimport VideoList from \"../src/Components/Header/VideoList/VideoList\";\nimport Data from \"../src/data/videos.json\";\nimport DataDetails from \"../src/data/video-details.json\";\nimport React from 'react';\nimport Comment from '../src/Components/Header/Comments/Comment'\nimport SelectedEntry from \"../src/Components/SelectedEntry/SelectedEntry\"\n\nclass App extends React.Component{\n  state = {\n    videos: Data,\n    videoDetail: DataDetails,\n    selectedEntry: null,\n}\n\n\nsetCurrentVideo = (id) => {\n  const individualEntry = this.state.videos.find((video) => video.id === id);\n  this.setState({ selectedEntry: individualEntry });\n};\n\nvideoDisplay = (event) => {\n  event.preventDefault();\n  let image = this.state.videos.image;\n  let title = this.state.videos.title;\n  let channel = this.state.videos.channel;\n  let id = this.state.videos.id;\n  let newVideo = { id: id, title: title, image: image, channel: channel };\n  let newArray = this.state.videos.concat(newVideo);\n  this.setState({ videos: newArray });\n  event.target.reset();\n};\n\n  render(){\n  return (\n    <div className=\"App\">\n      <Header />\n      <VideoDisplay entry={this.videoDisplay}/>\n      <VideoList videos = {this.state.videos} setCurrentVideo={this.setCurrentVideo}\n      />\n      <Comment />\n      <SelectedEntry entry={this.state.selectedEntry} />\n    </div>\n  )}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}