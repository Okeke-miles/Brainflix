{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\frank\\\\Desktop\\\\frank-okeke-brainflix\\\\frank-okeke-brainflix\\\\sprint-three\\\\client\\\\src\\\\App.js\";\nimport './App.scss';\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, withRouter } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport VideoList from \"./components/VideoList/VideoList\";\nimport Upload from \"../src/pages/Upload/Upload\"; // Using proper React best practices, I have made my App.js clean. It is used for routing purposes only. Most of my logic has been placed in the component files to make for an easier read. \n// My Header Component is placed outside the router as I want it to appear on every page.\n//I have three routes I am rendering. First to homepage(with BMX video). Then to homepage but with a video id for a selected video. Then to my upload component.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/upload\",\n          component: Upload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/video/:videoId\",\n          component: VideoList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: withRouter(VideoList)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/frank/Desktop/frank-okeke-brainflix/frank-okeke-brainflix/sprint-three/client/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","withRouter","Header","VideoList","Upload","App","render"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CAGA;AAEA;AAEA;;;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA2B;AAEzBS,EAAAA,MAAM,GAAE;AAER,wBACI,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAA4B,UAAA,SAAS,EAAEF;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,iBAAlB;AAAoC,UAAA,SAAS,EAAED;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAME,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEF,UAAU,CAAEE,SAAF;AAA3C;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaE;;AAjBuB;;AAoB3B,eAAeE,GAAf","sourcesContent":["import './App.scss';\nimport React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, withRouter} from \"react-router-dom\"\nimport Header from \"./components/Header/Header\";\nimport VideoList from \"./components/VideoList/VideoList\";\nimport Upload from \"../src/pages/Upload/Upload\"\n\n\n// Using proper React best practices, I have made my App.js clean. It is used for routing purposes only. Most of my logic has been placed in the component files to make for an easier read. \n\n// My Header Component is placed outside the router as I want it to appear on every page.\n\n//I have three routes I am rendering. First to homepage(with BMX video). Then to homepage but with a video id for a selected video. Then to my upload component.\n\nclass App extends Component{\n \n  render(){\n \n  return (\n      <BrowserRouter>\n        <Header />\n        <Switch>\n\n          <Route exact path=\"/upload\" component={Upload}/>\n\n          <Route exact path=\"/video/:videoId\" component={VideoList}/>\n\n          <Route exact path=\"/\" component={withRouter (VideoList)}/>  \n\n        </Switch>\n    </BrowserRouter>\n  )}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}